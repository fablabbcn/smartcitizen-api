server {
  server_name kairos.smartcitizen.me staging-kairos.smartcitizen.me;

  listen 80;
  listen [::]:80;

  listen 443 ssl;
  listen [::]:443 ssl;
  ssl_certificate    /etc/ssl/star_smartcitizen_me.pem;
  ssl_certificate_key    /etc/ssl/star_smartcitizen_me.key;

  location / {
    proxy_pass http://kairos:8080;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }
}

server {
  server_name id.smartcitizen.me;

  listen 80;
  listen [::]:80;

  listen 443 ssl;
  listen [::]:443 ssl;
  ssl_certificate    /etc/ssl/star_smartcitizen_me.pem;
  ssl_certificate_key    /etc/ssl/star_smartcitizen_me.key;

  rewrite ^/users/(.*)$ https://api.smartcitizen.com/ui/users/$1 permanent;
  rewrite ^/sessions/(.*)$ https://api.smartcitizen.com/ui/sessions/$1 permanent;
  rewrite ^/(.*)$ https://api.smartcitizen.com/$1 permanent;
}

server {
  server_name staging-id.smartcitizen.me;

  listen 80;
  listen [::]:80;

  listen 443 ssl;
  listen [::]:443 ssl;
  ssl_certificate    /etc/ssl/star_smartcitizen_me.pem;
  ssl_certificate_key    /etc/ssl/star_smartcitizen_me.key;

  rewrite ^/users/(.*)$ https://staging-api.smartcitizen.me/ui/users/$1 permanent;
  rewrite ^/sessions/(.*)$ https://staging-api.smartcitizen.me/ui/sessions/$1 permanent;
  rewrite ^/(.*)$ https://staging-api.smartcitizen.me/$1 permanent;
}

server {
  server_name api.smartcitizen.me data.smartcitizen.me staging-api.smartcitizen.me staging-data.smartcitizen.me new-api.smartcitizen.me;

  listen 80;
  listen [::]:80;

  listen 443 ssl;
  listen [::]:443 ssl;
  ssl_certificate    /etc/ssl/star_smartcitizen_me.pem;
  ssl_certificate_key    /etc/ssl/star_smartcitizen_me.key;
  root /app/public;

  location ~* ^/assets {
    expires max;
    add_header Cache-Control public;
    break;
  }

  try_files $uri/index.html $uri @app;

  location @app {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Ssl on; # Optional
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://app:3000;

    # Reverse proxy cache
    #proxy_cache smartcitizen;
    proxy_cache_lock on;
    proxy_cache_use_stale updating;

    # Add CORS
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'Authorization,OnboardingSession,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

      # Tell client that this pre-flight info is valid for 30 days
      add_header 'Access-Control-Max-Age' 2592000;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      add_header 'Content-Length' 0;
      return 200; # Well, maybe 204, no content.
    }
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Authorization,OnboardingSession,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
  }

  client_max_body_size 4G;
  keepalive_timeout 10;
}
