version: '3.3'

services:
  db:
    image: postgres:10
    volumes:
      - sck-postgres:/var/lib/postgresql/data

  redis:
    image: redis:4

  app:
    build: .
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      # We disable some containers in production
      #- db
      - redis
      - sidekiq
      - mqtt-task
      - telnet-task
      - push
      #- mqtt
    volumes:
      - "./:/app"
    command: rails server -p 3000 -b '0.0.0.0'
    environment:
      # For this to take effect, remove init/timeout, and in Gemfile, fix "rack-timeout" to not require anything.
      RACK_TIMEOUT_SERVICE_TIMEOUT: 25

  sidekiq:
    build: .
    env_file: .env
    command: bundle exec sidekiq

  mqtt-task:
    build: .
    env_file: .env
    command: bundle exec rake mqtt:sub

  telnet-task:
    build: .
    env_file: .env
    command: bundle exec rake telnet:push

  mqtt:
    image: emqx/emqx
    ports:
      - "1883:1883"   # mqtt tcp
      #- "8080:8080"   # http:management - can clash with Kairos
      - "8083:8083"   # HTTP and WebSocket
      - "8084:8084"   # HTTPS and WSS
      - "18083:18083" # Web dashboard: admin:public
      #- "11883:11883"

  web:
    image: nginx
    depends_on:
      - app
    ports:
      - 80:80
      #- 443:443
    volumes:
      - ./scripts/nginx-conf/api.smartcitizen.me.conf:/etc/nginx/conf.d/api.smartcitizen.me.conf

  # Websockets
  push:
    image: smartcitizen/push
    environment:
      - REDIS_URL=redis://redis:6379/4
        # TODO: needs SSL on ws.smartcitizen.me
    ports:
      - 8000:8000

# There is no official docker image for Kairos 2017-12-18
#  kairos:
#    image: kairos
  kairos:
    env_file: .env
    build:
      context: ./scripts/
      dockerfile: Dockerfile-kairos
    ports:
      - 8080:8080
      - 4242:4242 #telnet
    # We better not start Cassandra container in production, it eats up memory
    #depends_on:
      #- cassandra-1

# Check if cassandra cluster is working:
# docker-compose exec cassandra-1 nodetool status
  cassandra-1:
    image: cassandra #:3.11.3
    ports:
      # no need to expose all ports?
      - "7000:7000" # Internode, cluster communication
      - "7001:7001" # TLS Internode
      - "7199:7199" # JMX
      - "9042:9042" # CQL native transport
      - "9160:9160" # Thrift client API
    #volumes:
      #- sck-cassandra:/var/lib/cassandra

#  cassandra-2:
#    image: cassandra
#    ports:
#      - 9142:9042
#    environment:
#      - CASSANDRA_SEEDS=cassandra-1 # Use IP if on different servers
#    depends_on:
#      - cassandra-1
#    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 60; fi && /docker-entrypoint.sh cassandra -f'
#
#  cassandra-3:
#    image: cassandra
#    ports:
#      - 9242:9042
#    environment:
#      - CASSANDRA_SEEDS=cassandra-1 # Use IP if on different servers
#    depends_on:
#      - cassandra-1
#    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 120; fi && /docker-entrypoint.sh cassandra -f'

volumes:
  sck-postgres:
